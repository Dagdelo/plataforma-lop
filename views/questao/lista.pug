extends ../layout

block content
  input(type="hidden", name="listaId", value=lista._id)
  section.hero.is-dark.shadow-inside
    .hero-body
        .container
          h3.title.title-with-shadow.is-size-2 #{lista.titulo}
          if user && lista.questoes && progresso
            h2.subtitle #{progresso['porcentagem']}% das questões resolvidas (#{progresso['quantidadeResolvidas']} de #{progresso['quantidadeTotal']}).
            progress.progress.is-primary(value=`${progresso['porcentagem']}` max="100")
          if user && permissoes.temPermissao(user, 'CREATE_QUESTAO')
            a.button.is-primary.is-outlined.is-inverted(href=`/lista/editar/${lista._id}`, title="Editar Lista")
              span.icon.is-small
                i.fa.fa-pencil
              span Editar
                  
  section.m-t-16.m-b-16
    .container
      - const questoesLista = lista.questoes || [];
        if questoesLista.length === 0
          p Não há questões na lista.
        else
          .columns.is-multiline.is-tablet
            for questao in questoesLista
              .column.is-half
                .card
                  header.card-header
                    p.card-header-title
                      a.preview-link(href=`/questao/${questao._id}?lista=${lista._id}`)
                        if questao.enunciado.startsWith('[L')
                          - const index = questao.enunciado.indexOf(']')
                          - const listaIndex = questao.enunciado.substring(0, index+1)
                          |#{listaIndex} - 
                        |#{questao.titulo} 
                      if user && submissoes && submissoes.has(questao._id.toString())
                        span
                          |&nbsp;
                          i.fa.fa-check.check-resolvida(title="Resolvida")
                    a.card-header-icon.card-toggle
                      span.icon: i.fa.fa-angle-down
                  .card-content(style="display:none;")
                    .content
                      - const enunciado = questao.enunciado;
                        p= enunciado
                      
                          
                  footer.card-footer
                    if user && submissoes.has(questao._id.toString())
                    span.card-footer-item Classificação: #{questao.dificuldade}
                    span.card-footer-item Submissões: #{submissoes && submissoes.has(questao._id.toString()) ? submissoes.get(questao._id.toString()) : 0}
                    span.card-footer-item
                      if user
                        form(name="favoritar-questao-form" method="POST" action=`/api/v1/questoes/${questao._id}/favoritar`)
                          - const questoesFavoritas = user.questoesFavoritas.map(obj => obj.toString())
                          - const btnClass = questoesFavoritas.includes(questao._id.toString()) ? 'is-primary favoritado' : 'is-primary is-outlined'
                          button.button.is-small(class=btnClass type="submit" name="btn_favoritar")
                            span.icon.is-small
                              i.fa.fa-thumbs-o-up 
                            | 
                            span(name="btn_favoritar_likes") #{questao.likes}
                      else 
                        button.button.is-small.is-primary.is-outlined(name="btn-favoritar-no-user")
                          span.icon.is-small
                            i.fa.fa-thumbs-o-up
                          |
                          span #{questao.likes}
